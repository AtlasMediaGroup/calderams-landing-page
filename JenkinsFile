pipeline {
    agent any

    stages {

    stage("Gather Deployment Parameters") {
        steps {
            timeout(time: 30, unit: 'SECONDS') {
                script {
                    // Show the select input modal
                   def INPUT_PARAMS = input message: 'Please Provide Parameters', ok: 'Next',
                                    parameters: [
                                    choice(name: 'ARCHIVA_STORE', choices: ['yes','no'].join('\n'), description: 'Would you like to save this build in Archiva?'),
                                    choice(name: 'ENVIRONMENT', choices: ['sandbox','development','QA','demo'].join('\n'), description: 'Which environment would you like this build to be deployed to?')]
                    env.ENVIRONMENT = INPUT_PARAMS.ENVIRONMENT
                    env.ARCHIVA_STORE = INPUT_PARAMS.IMAGE_TAG
                }
            }
        }
    }
        stage('Checkout from SCM') {
            steps {
                checkout scm
            }
        }
        stage('Build Branch') {
            steps {
                echo 'build a branch here please'
            }
        }
        stage('Run Test'){
        parallel {
            stage('Run Unit Tests') {
                steps {
                    echo 'Run all the unit tests here please'
                }
            }
            stage('Run Mutation Tests') {
                steps {
                    echo 'Run all the mutation tests here please'
                }
            }
        }
        }

        stage('Check Storage & Deployment Requirements'){
        steps{
        if (${env.ARCHIVA_STORE == 'yes'}) {
        stage('Store In Archiva') {
          steps {
            echo 'do some magic to store in archiva'
          }
        }}
        }}
    }
}
