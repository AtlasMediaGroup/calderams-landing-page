def userInput = true
def didTimeout = false
try {
    timeout(time: 15, unit: 'MINUTES') { // change to a convenient timeout for you
        userInput = input(
        id: 'Proceed1', message: 'Do you wish to store this build in Archiva?', parameters: [
        [$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Please state if you do want the build to store in archiva?']
        ])
    }
} catch(err) { // timeout reached or input false
    def user = err.getCauses()[0].getUser()
    if('SYSTEM' == user.toString()) { // SYSTEM means timeout.
        didTimeout = true
    } else {
        userInput = false
        echo "Aborted by: [${user}]"
    }
}

pipeline {
    agent any

    stages {
        stage('Checkout from SCM') {
            steps {
                checkout scm
            }
        }
        stage('Build Branch') {
            steps {
                echo 'Do the testing steps here please.'
            }
        }
        stage('Run Test'){
        parallel {
            stage('Run Unit Tests') {
                steps {
                    echo 'Run all the unit tests here please'
                }
            }
            stage('Run Mutation Tests') {
                steps {
                    echo 'Run all the mutation tests here please'
                }
            }
        }
        }

        stage('Store In Archiva?') {
        steps {
          script{
            if (didTimeout) {
            echo "no input was received before timeout"
            } else if (userInput == true) {
            echo "this was successful"
            } else {
            echo "this was not successful"
            currentBuild.result = 'FAILURE'
            } }
        }
        }

    }
}
